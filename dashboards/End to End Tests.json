{
  "__inputs": [
    {
      "name": "DS_POSTGRESQL",
      "label": "PostgreSQL",
      "description": "",
      "type": "datasource",
      "pluginId": "postgres",
      "pluginName": "PostgreSQL"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "10.0.3"
    },
    {
      "type": "datasource",
      "id": "postgres",
      "name": "PostgreSQL",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_POSTGRESQL}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": false,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "service"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 155
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "status"
            },
            "properties": [
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-text"
                }
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "red",
                      "value": 1
                    },
                    {
                      "color": "semi-dark-blue",
                      "value": 2
                    }
                  ]
                }
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "0": {
                        "text": "passed"
                      },
                      "1": {
                        "text": "failed"
                      },
                      "2": {
                        "text": "skipped"
                      }
                    },
                    "type": "value"
                  }
                ]
              },
              {
                "id": "custom.width",
                "value": 171
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "scenario"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 300
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "time"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 281
              },
              {
                "id": "displayName",
                "value": "last executed"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "fail_count"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 212
              },
              {
                "id": "displayName",
                "value": "fail count"
              },
              {
                "id": "noValue",
                "value": "0"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "total_count"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "times executed"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "failure_rate"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 176
              },
              {
                "id": "noValue",
                "value": "0"
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-text"
                }
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "red",
                      "value": 20
                    }
                  ]
                }
              },
              {
                "id": "displayName",
                "value": "failure rate (%)"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 26,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 0,
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "10.0.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\n  s.service, s.name as scenario, \n  case when status = 'passed' then 0 when status = 'failed' then 1 when status = 'skipped' then 2 end as status, sr1.max_created_at as \"time\"\nFROM scenarios s, scenario_results sr, (select scenario_id, max(created_at) as max_created_at from scenario_results group by scenario_id) as sr1\nWHERE\n  s.service = '$Service' and\n  sr.scenario_id = s.id and\n  sr1.scenario_id = s.id and\n  sr.created_at = sr1.max_created_at and\n  $__timeFilter(sr1.max_created_at)\nORDER BY 4 desc",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "select scenarios.name as scenario, count(scenarios.name) as fail_count\nfrom scenarios, scenario_results\nwhere scenarios.service = '$Service' \nand scenario_results.status = 'failed'\nand scenarios.id = scenario_results.scenario_id\nand  $__timeFilter(scenario_results.created_at)\ngroup by scenarios.name",
          "refId": "B",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "select scenarios.name as scenario, count(scenarios.name) as total_count\nfrom scenarios, scenario_results\nwhere scenarios.service = '$Service' \nand scenarios.id = scenario_results.scenario_id\nand  $__timeFilter(scenario_results.created_at)\ngroup by scenarios.name",
          "refId": "C",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_POSTGRESQL}"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "select scenarios.name as scenario, (count(scenarios.name) * 100 / (select count(id) from scenario_results where scenario_results.scenario_id = scenarios.id and $__timeFilter(scenario_results.created_at))) as failure_rate\nfrom scenarios, scenario_results\nwhere scenarios.service = '$Service'\nand scenario_results.status = 'failed' \nand scenarios.id = scenario_results.scenario_id\nand  $__timeFilter(scenario_results.created_at)\ngroup by scenarios.id, scenarios.name\n",
          "refId": "D",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "End to End Test Cases",
      "transformations": [
        {
          "id": "merge",
          "options": {}
        }
      ],
      "transparent": true,
      "type": "table"
    }
  ],
  "refresh": "",
  "schemaVersion": 38,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": {
          "type": "postgres",
          "uid": "${DS_POSTGRESQL}"
        },
        "definition": "SELECT DISTINCT service FROM suite_results where test_type = 'e2e'",
        "description": "Name of the service",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "Service",
        "options": [],
        "query": "SELECT DISTINCT service FROM suite_results where test_type = 'e2e'",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-2d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "End to End Tests",
  "uid": "6PgQ75W7z",
  "version": 6,
  "weekStart": ""
}